---
import { Icon } from 'astro-icon/components';
import getReadingTime from 'reading-time';
import Button from '../ui/Button.astro';
import { marked } from 'marked';

import Author from '~/components/blog/Author.astro';
import Image from '~/components/common/Image.astro';
import Projects from '~/components/blog/Projects.astro';
import SocialShare from '~/components/common/SocialShare.astro';

import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate } from '~/utils/utils';

import type { Post } from '~/types';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
---

<section class="py-8 sm:py-16 lg:py-20 mx-auto">
  <article>
    <header class="relative max-w-4xl mx-auto">
      <Button
        variant="primary"
        class="absolute right-0 top-0 px-6 py-2"
        target="_blank"
        icon="tabler:edit"
        href={`https://archipel.assemblee-virtuelle.org/Document/${encodeURIComponent(post.id)}`}
      >
        Editer
      </Button>
      <div class="flex justify-between flex-col sm:flex-row mt-0 mb-2 px-4 sm:px-6 sm:items-center">
        <p>
          <Icon name="tabler:clock" class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400" />
          <!-- <time datetime={String(post['dc:created'])} class="inline-block"
            >{getFormattedDate(new Date(post['dc:created']))}</time
          > -->
          {
            post.category && (
              <>
                {' '}
                ·{' '}
                <a class="capitalize hover:underline inline-block" href={getPermalink(post.category, 'category')}>
                  {post.category.replaceAll('-', ' ')}
                </a>
              </>
            )
          }
          <>· {Math.ceil(getReadingTime(post['pair:description']).minutes)} min read</>
        </p>
      </div>
      <h1 class="px-4 sm:px-6 mr-24 text-4xl md:text-5xl font-bold leading-tighter tracking-tighter font-heading">
        {post['pair:label']}
      </h1>
      <p class="mt-4 mb-8 px-4 sm:px-6 text-xl md:text-2xl text-muted dark:text-slate-400 text-justify">
        {post['pair:comment'] || post['pair:description'].substring(0, 200)}
      </p>

      {
        post.image ? (
          <Image
            src={post.image}
            class="max-w-full lg:max-w-[900px] mx-auto mb-6 sm:rounded-md bg-gray-400 dark:bg-slate-700"
            widths={[400, 900]}
            sizes="(max-width: 900px) 400px, 900px"
            alt={post?.['pair:comment'] || ''}
            width={900}
            height={506}
            loading="eager"
            decoding="async"
          />
        ) : (
          <div class="max-w-4xl mx-auto px-4 sm:px-6">
            <div class="border-t dark:border-slate-700" />
          </div>
        )
      }
    </header>
    <div
      class="mx-auto px-6 sm:px-6 max-w-4xl prose prose-lg dark:prose-invert dark:prose-headings:text-slate-300 prose-md prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-primary dark:prose-a:text-blue-400 prose-img:rounded-md prose-img:shadow-lg mt-8 prose-headings:scroll-mt-[80px]"
    >
      <Fragment set:html={marked.parse(post['pair:description'] || '')} />
    </div>
    <div class="mx-auto px-6 sm:px-6 max-w-4xl mt-8 flex justify-between flex-col sm:flex-row">
      {post['dc:creator'] && <Author actorUri={post['dc:creator']} />}
      <!-- <Projects title="Projets liés" projectsUris={post['pair:documents']} /> -->
      <!-- <SocialShare url={url} text={post.title} class="mt-5 sm:mt-1 align-middle text-gray-500 dark:text-slate-600" /> -->
    </div>
  </article>
</section>
