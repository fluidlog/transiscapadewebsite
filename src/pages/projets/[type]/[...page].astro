---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import Layout from '~/layouts/PageLayout.astro';
import Headline from '~/components/blog/Headline.astro';
import Pagination from '~/components/blog/Pagination.astro';

import dataProvider from '~/config/dataProvider';
import { projectTypes } from '~/config/typesMapping';
import ProjectCard from '~/components/projects/ProjectCard.astro';
import type { Project } from '~/types';

export const getStaticPaths = (async ({ paginate }) => {
  const { data } = await dataProvider.getList('Project');
  return Object.keys(projectTypes).flatMap((type) => {
    const filteredData = data.filter((resource) => resource['pair:hasType'] === projectTypes[type].uri);
    return paginate(filteredData, {
      params: { type },
      pageSize: 40,
    });
  });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const { type } = Astro.params;

const { name, description } = projectTypes[type];

const metadata = {
  title: name,
  description,
};
---

<Layout metadata={metadata}>
  <section class="px-6 sm:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-6xl">
    <Headline subtitle={description}>
      {name}
    </Headline>
    <div class="grid gap-6 md:grid-cols-3 lg:grid-cols-4 -mb-6">
      {page.data.map((project: Project) => <ProjectCard project={project} />)}
    </div>
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>
